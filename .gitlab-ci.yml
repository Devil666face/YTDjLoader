# FROM debian:10
# RUN apt-get update -y && \
#     apt-get install -y \
#       gcc make patchelf wget tar git libsqlite3-0 openssl ca-certificates
# RUN git config --global http.sslVerify "false"
# RUN openssl s_client -showcerts -verify 5 -connect git.dev.ap17.mil.ru:443 < /dev/null 2>/dev/null | openssl x509 -outform PEM | tee gitlab.crt
# RUN openssl s_client -showcerts -verify 5 -connect registry.dev.ap17.mil.ru:443 < /dev/null 2>/dev/null | openssl x509 -outform PEM | tee docker.crt
# RUN cp gitlab.crt /usr/local/share/ca-certificates/
# RUN cp docker.crt /usr/local/share/ca-certificates/
# RUN update-ca-certificates
# ENV http_proxy="http://proxy01.ap17.mil.ru:2270"
# ENV https_proxy="http://proxy01.ap17.mil.ru:2270"

stages:       
  - build
  - release

build_job:
  stage: build
  image: registry.dev.ap17.mil.ru/docker-images/debian10-python-nuitka:latest
# image: debian:10
  tags:
    - avz-runner-1
  script:
    - mkdir -p ./dist
    - touch ./dist/DjangoTemplate.tgz
    # - .dev/init.sh
    # - ./venv/bin/pip install nuitka
    # - .dev/build-sqlite.sh
    # - .dev/build-other.sh
  artifacts:
    name: "Get artifacts for $CI_COMMIT_SHORT_SHA"
    paths: 
      - $PWD/dist/
  allow_failure: false

# FROM registry.gitlab.com/gitlab-org/release-cli
# RUN apk --no-cache add openssl ca-certificates
# RUN openssl s_client -showcerts -verify 5 -connect git.dev.ap17.mil.ru:443 < /dev/null 2>/dev/null | openssl x509 -outform PEM | tee gitlab.crt
# RUN openssl s_client -showcerts -verify 5 -connect registry.dev.ap17.mil.ru:443 < /dev/null 2>/dev/null | openssl x509 -outform PEM | tee docker.crt
# RUN cp gitlab.crt /usr/local/share/ca-certificates/
# RUN cp docker.crt /usr/local/share/ca-certificates/
# RUN update-ca-certificates
# ENV http_proxy="http://proxy01.ap17.mil.ru:2270"
# ENV https_proxy="http://proxy01.ap17.mil.ru:2270"

release_job:
  stage: release
  image: registry.dev.ap17.mil.ru/docker-images/release-cli:latest
  # image: registry.gitlab.com/gitlab-org/release-cli:latest
  tags:
    - avz-runner-1
  needs:
    - job: build_job
      artifacts: true
  script:
    - echo "running release_job"
    - echo "${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/file/dist/${CI_PROJECT_NAME}.tgz"
  release:
    name: "Release Executables $CI_COMMIT_SHORT_SHA"
    description: "Created using the release-cli"
    tag_name: "$CI_COMMIT_SHORT_SHA"
    assets:
      links:
        - name: "Release"
          url: "${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/file/dist/${CI_PROJECT_NAME}.tgz"
